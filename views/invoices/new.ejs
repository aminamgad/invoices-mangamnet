<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>إنشاء فاتورة جديدة - نظام إدارة الفواتير والعملاء</title>
    
    <!-- Bootstrap RTL CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- Google Fonts - Arabic -->
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            /* Light mode colors */
            --bg-primary: #f8f9fa;
            --bg-secondary: #ffffff;
            --bg-tertiary: #e9ecef;
            --text-primary: #333333;
            --text-secondary: #6c757d;
            --text-muted: #adb5bd;
            --text-inverse: #ffffff;
            --border-color: #e9ecef;
            --shadow-color: rgba(0,0,0,0.1);
            --sidebar-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --primary-hover: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
            --card-bg: #ffffff;
            --table-bg: #ffffff;
            --input-bg: #ffffff;
            --input-border: #e9ecef;
            --navbar-bg: #ffffff;
            --number-color: #333333;
            --badge-text: #ffffff;
            --bs-light: #f8f9fa;
        }

        [data-theme="dark"] {
            /* Dark mode colors */
            --bg-primary: #121212;
            --bg-secondary: #1e1e1e;
            --bg-tertiary: #2d2d2d;
            --text-primary: #ffffff;
            --text-secondary: #b3b3b3;
            --text-muted: #888888;
            --text-inverse: #333333;
            --border-color: #404040;
            --shadow-color: rgba(0,0,0,0.3);
            --sidebar-gradient: linear-gradient(135deg, #4a5568 0%, #553c9a 100%);
            --primary-gradient: linear-gradient(135deg, #4a5568 0%, #553c9a 100%);
            --primary-hover: linear-gradient(135deg, #3d4852 0%, #4c3085 100%);
            --card-bg: #2d2d2d;
            --table-bg: #2d2d2d;
            --input-bg: #3d3d3d;
            --input-border: #555555;
            --navbar-bg: #1e1e1e;
            --number-color: #ffffff;
            --badge-text: #ffffff;
            --bs-light: rgba(255,255,255,0.05);
        }
        
        * {
            font-family: 'Cairo', sans-serif;
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        }
        
        body {
            background-color: var(--bg-primary);
            color: var(--text-primary);
        }
        
        /* Sidebar styling */
        .sidebar {
            min-height: 100vh;
            background: var(--sidebar-gradient);
            box-shadow: 2px 0 10px var(--shadow-color);
        }
        
        .sidebar .nav-link {
            color: rgba(255,255,255,0.8);
            border-radius: 8px;
            margin: 2px 0;
            transition: all 0.3s ease;
        }
        
        .sidebar .nav-link:hover, .sidebar .nav-link.active {
            background-color: rgba(255,255,255,0.1);
            color: white;
            transform: translateX(-3px);
        }
        
        .sidebar .nav-link.active {
            background-color: rgba(255,255,255,0.2);
            border-left: 3px solid rgba(255,255,255,0.8);
            font-weight: 600;
        }
        
        .sidebar .nav-link.disabled {
            color: rgba(255,255,255,0.4);
            cursor: not-allowed;
        }
        
        .sidebar .nav-link.disabled:hover {
            background-color: transparent;
            transform: none;
        }
        
        /* Quick Create Invoice Button Styling */
        .sidebar .nav-link.quick-create-invoice {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white !important;
            font-weight: 600;
            margin: 8px 0;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3);
        }
        
        .sidebar .nav-link.quick-create-invoice:hover {
            background: linear-gradient(135deg, #218838 0%, #1e7e34 100%);
            transform: translateX(-8px);
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.4);
        }
        
        .sidebar .nav-link.quick-create-invoice i {
            font-size: 1.1em;
        }
        
        /* Theme toggle button */
        .theme-toggle {
            position: fixed;
            top: 20px;
            left: 20px;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: var(--primary-gradient);
            border: none;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            z-index: 1000;
            box-shadow: 0 4px 15px var(--shadow-color);
            transition: all 0.3s ease;
        }
        
        .theme-toggle:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px var(--shadow-color);
        }
        
        /* Form styling */
        .form-control, .form-select {
            background-color: var(--input-bg);
            border: 2px solid var(--input-border);
            color: var(--text-primary);
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .form-control:focus, .form-select:focus {
            background-color: var(--input-bg);
            border-color: #667eea;
            color: var(--text-primary);
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .form-control::placeholder {
            color: var(--text-muted);
        }

        .form-label {
            color: var(--text-primary);
            font-weight: 500;
        }

        .form-text {
            color: var(--text-muted);
        }

        .card {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            color: var(--text-primary);
            border-radius: 15px;
            box-shadow: 0 4px 20px var(--shadow-color);
            transition: transform 0.3s ease, background-color 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            background-color: var(--bg-tertiary);
            border-bottom: 1px solid var(--border-color);
            color: var(--text-primary);
        }

        /* Searchable dropdown styling */
        .dropdown-menu {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            box-shadow: 0 0.5rem 1rem var(--shadow-color);
            position: absolute;
            z-index: 1000;
            width: 100%;
            max-height: 200px;
            overflow-y: auto;
            display: none;
        }

        .dropdown-menu.show {
            display: block !important;
        }

        .dropdown-item {
            color: var(--text-primary);
            padding: 0.5rem 1rem;
            border-bottom: 1px solid var(--border-color);
            cursor: pointer;
            transition: background-color 0.2s ease;
        }

        .dropdown-item:hover {
            background-color: var(--bg-tertiary);
            color: var(--text-primary);
        }

        .dropdown-item:last-child {
            border-bottom: none;
        }

        .dropdown-item .text-muted {
            color: var(--text-muted) !important;
        }

        /* Position dropdown relative to input group */
        .input-group {
            position: relative;
        }

        /* Ensure proper positioning for dropdowns */
        .col-md-6 {
            position: relative;
        }

        #clientDropdown,
        #fileDropdown {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            z-index: 1000;
            margin-top: 2px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            background-color: var(--card-bg);
            box-shadow: 0 4px 20px var(--shadow-color);
            display: none;
        }

        /* Ensure dropdown is visible */
        .dropdown-menu.show {
            display: block !important;
        }

        /* Make sure dropdown items are clickable */
        .dropdown-item {
            cursor: pointer;
            user-select: none;
        }

        .dropdown-item:hover {
            background-color: var(--bg-tertiary);
        }

        /* Loading state for dropdowns */
        .dropdown-loading {
            padding: 1rem;
            text-align: center;
            color: var(--text-muted);
        }

        .dropdown-loading .spinner-border {
            width: 1rem;
            height: 1rem;
        }

        /* Modal styling */
        .modal-content {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            color: var(--text-primary);
        }

        .modal-header {
            background-color: var(--bg-tertiary);
            border-bottom: 1px solid var(--border-color);
        }

        .modal-footer {
            background-color: var(--bg-tertiary);
            border-top: 1px solid var(--border-color);
        }

        /* Commission info styling */
        #commissionInfo {
            min-height: 60px;
        }

        /* Loading spinner */
        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }
        
        /* Dark mode specific adjustments */
        [data-theme="dark"] .form-control,
        [data-theme="dark"] .form-select {
            background-color: var(--input-bg);
            border-color: var(--input-border);
            color: var(--text-primary);
        }

        [data-theme="dark"] .form-control:focus,
        [data-theme="dark"] .form-select:focus {
            background-color: var(--input-bg);
            border-color: #667eea;
            color: var(--text-primary);
        }

        [data-theme="dark"] .text-danger {
            color: #ff6b6b !important;
        }

        [data-theme="dark"] .text-info {
            color: #74c0fc !important;
        }

        [data-theme="dark"] .text-warning {
            color: #ffd43b !important;
        }

        [data-theme="dark"] .text-success {
            color: #51cf66 !important;
        }

        [data-theme="dark"] .text-muted {
            color: var(--text-muted) !important;
        }
        
        /* Mobile responsive */
        @media (max-width: 768px) {
            .sidebar {
                position: fixed;
                top: 0;
                right: -100%;
                width: 80%;
                height: 100vh;
                z-index: 1050;
                transition: right 0.3s ease;
            }
            
            .sidebar.show {
                right: 0;
            }
            
            .sidebar-overlay {
                display: none;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0,0,0,0.5);
                z-index: 1040;
            }
            
            .sidebar-overlay.show {
                display: block;
            }
            
            .theme-toggle {
                top: 10px;
                left: 10px;
                width: 40px;
                height: 40px;
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Theme Toggle Button -->
    <button class="theme-toggle" id="themeToggle" title="تبديل الوضع المظلم">
        <i class="fas fa-moon" id="themeIcon"></i>
    </button>

    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block sidebar collapse">
                <div class="position-sticky pt-3">
                    <div class="text-center mb-4">
                        <h4 class="text-white">نظام الفواتير</h4>
                        <small class="text-white-50">مرحباً <%= currentUser.username %></small>
                    </div>
                    
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link" href="/dashboard">
                                <i class="fas fa-tachometer-alt ms-2"></i>
                                لوحة التحكم
                            </a>
                        </li>
                        
                        <!-- Quick Create Invoice Button -->
                        <li class="nav-item">
                            <a class="nav-link quick-create-invoice active" href="/invoices/new">
                                <i class="fas fa-plus-circle ms-2"></i>
                                إنشاء فاتورة جديدة
                            </a>
                        </li>
                        
                        <!-- Reports -->
                        <% if (currentUser.role === 'admin' || currentUser.permissions.canViewReports) { %>
                        <li class="nav-item">
                            <a class="nav-link" href="/reports">
                                <i class="fas fa-chart-line ms-2"></i>
                                تقارير الأرباح
                            </a>
                        </li>
                        <% } %>
                        
                        <!-- Clients -->
                        <% if (currentUser.role === 'admin' || currentUser.permissions.canManageClients) { %>
                        <li class="nav-item">
                            <a class="nav-link" href="/clients">
                                <i class="fas fa-users ms-2"></i>
                                العملاء
                            </a>
                        </li>
                        <% } %>
                        
                        <!-- Distributors -->
                        <% if (currentUser.role === 'admin') { %>
                        <li class="nav-item">
                            <a class="nav-link" href="/distributors">
                                <i class="fas fa-user-tie ms-2"></i>
                                الموزعين
                            </a>
                        </li>
                        <% } %>
                        
                        <!-- Companies -->
                        <% if (currentUser.role === 'admin' || currentUser.permissions.canCreateCompanies) { %>
                        <li class="nav-item">
                            <a class="nav-link" href="/companies">
                                <i class="fas fa-building ms-2"></i>
                                الشركات
                            </a>
                        </li>
                        <% } %>
                        
                        <!-- Files -->
                        <li class="nav-item">
                            <a class="nav-link" href="/files">
                                <i class="fas fa-folder ms-2"></i>
                                الملفات
                            </a>
                        </li>
                        
                        <!-- Invoices -->
                        <li class="nav-item">
                            <a class="nav-link" href="/invoices">
                                <i class="fas fa-file-invoice ms-2"></i>
                                الفواتير
                            </a>
                        </li>
                        
                        <!-- Commission Tiers - Admin only -->
                        <% if (currentUser.role === 'admin') { %>
                        <li class="nav-item">
                            <a class="nav-link" href="/commission-tiers">
                                <i class="fas fa-percentage ms-2"></i>
                                مستويات العمولة
                            </a>
                        </li>
                        <% } %>
                    </ul>
                    
                    <div class="mt-auto pt-3">
                        <form method="POST" action="/auth/logout" class="d-inline">
                            <button type="submit" class="btn btn-outline-light btn-sm w-100">
                                <i class="fas fa-sign-out-alt ms-2"></i>
                                تسجيل الخروج
                            </button>
                        </form>
                    </div>
                </div>
            </nav>
            
            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <!-- Mobile navbar -->
                <div class="d-md-none">
                    <nav class="navbar navbar-expand-lg navbar-light mb-3">
                        <div class="container-fluid">
                            <button class="navbar-toggler" type="button" id="sidebarToggle">
                                <span class="navbar-toggler-icon"></span>
                            </button>
                            <span class="navbar-brand">نظام الفواتير</span>
                        </div>
                    </nav>
                </div>
                
                <!-- Flash messages -->
                <% if (success && success.length > 0) { %>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <%= success %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>
                
                <% if (error && error.length > 0) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <%= error %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% } %>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">إنشاء فاتورة جديدة</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="/invoices" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-right"></i>
            العودة للفواتير
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">بيانات الفاتورة</h5>
            </div>
            <div class="card-body">
                <form method="POST" action="/invoices" id="invoiceForm">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="invoiceCode" class="form-label">رقم الفاتورة <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="invoiceCode" name="invoiceCode" required>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="invoiceDate" class="form-label">تاريخ الفاتورة <span class="text-danger">*</span></label>
                            <input type="date" class="form-control" id="invoiceDate" name="invoiceDate" required>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6 mb-3">
                                            <label for="clientSearch" class="form-label">العميل <span class="text-danger">*</span></label>
                                            <div class="input-group">
                                                <input type="text" class="form-control" id="clientSearch" placeholder="انقر للبحث أو اكتب للتصفية..." autocomplete="off">
                                                <input type="hidden" id="client" name="client" required>
                                                <button type="button" class="btn btn-outline-primary" id="addClientBtn" title="إضافة عميل جديد">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                            <div id="clientDropdown" class="dropdown-menu w-100" style="display: none; max-height: 200px; overflow-y: auto;"></div>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                                            <label for="fileSearch" class="form-label">الملف <span class="text-danger">*</span></label>
                                            <div class="input-group">
                                                <input type="text" class="form-control" id="fileSearch" placeholder="انقر للبحث أو اكتب للتصفية..." autocomplete="off">
                                                <input type="hidden" id="file" name="file" required>
                                                <% if (currentUser.role === 'admin' || currentUser.permissions.canCreateFiles || (currentUser.detailedPermissions && currentUser.detailedPermissions.some(p => p.module === 'files' && p.action === 'create'))) { %>
                                                <button type="button" class="btn btn-outline-primary" id="addFileBtn" title="إضافة ملف جديد">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                                <% } %>
                                            </div>
                                            <div id="fileDropdown" class="dropdown-menu w-100" style="display: none; max-height: 200px; overflow-y: auto;"></div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="assignedDistributor" class="form-label">الموزع المكلف <span class="text-danger">*</span></label>
                            <select class="form-select" id="assignedDistributor" name="assignedDistributor" required>
                                <option value="">اختر الموزع</option>
                                                <% distributors.forEach(function(distributor) { %>
                                                    <option value="<%= distributor._id %>"><%= distributor.username %></option>
                                                <% }); %>
                            </select>
                        </div>
                        
                        <div class="col-md-6 mb-3">
                            <label for="total" class="form-label">إجمالي الفاتورة (جنيه) <span class="text-danger">*</span></label>
                            <input type="number" class="form-control" id="total" name="total" min="0" step="0.01" required>
                            <div class="form-text">المبلغ الأساسي للفاتورة قبل الضرائب والخصومات</div>
                        </div>
                    </div>
                    
                    <!-- Tax and Profit Calculation Section -->
                    <div class="card mt-3 mb-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">حساب الضرائب والأرباح</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <!-- Tax Percentage -->
                                <div class="col-md-6 mb-3">
                                    <label for="taxPercentage" class="form-label">نسبة الضريبة (%) <span class="text-danger">*</span></label>
                                    <input type="number" class="form-control" id="taxPercentage" name="taxPercentage" min="0" max="100" step="0.01" required>
                                    <div class="form-text">الضريبة التي يأخذها الموزع من العميل</div>
                                </div>
                                
                                <!-- Tax Amount (Calculated) -->
                                <div class="col-md-6 mb-3">
                                    <label for="taxAmount" class="form-label">قيمة الضريبة (جنيه)</label>
                                    <input type="text" class="form-control" id="taxAmount" name="taxAmount" readonly>
                                    <div class="form-text">تحسب تلقائياً</div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <!-- Management Tax Percentage -->
                                <div class="col-md-6 mb-3">
                                    <label for="managementTaxPercentage" class="form-label">نسبة ضريبة الإدارة (%) <span class="text-danger">*</span></label>
                                    <input type="number" class="form-control" id="managementTaxPercentage" name="managementTaxPercentage" min="0" max="100" step="0.01" required>
                                    <div class="form-text">ضريبة الإدارة (لا يمكن تعديلها إلا من الإدارة)</div>
                                </div>
                                
                                <!-- Management Tax Amount (Calculated) -->
                                <div class="col-md-6 mb-3">
                                    <label for="managementTaxAmount" class="form-label">قيمة ضريبة الإدارة (جنيه)</label>
                                    <input type="text" class="form-control" id="managementTaxAmount" name="managementTaxAmount" readonly>
                                    <div class="form-text">تحسب تلقائياً</div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <!-- Corporate Tax Percentage -->
                                <div class="col-md-6 mb-3">
                                    <label for="corporateTaxPercentage" class="form-label">نسبة الضريبة المؤسسية (%) <span class="text-danger">*</span></label>
                                    <input type="number" class="form-control" id="corporateTaxPercentage" name="corporateTaxPercentage" min="0" max="100" step="0.01" required>
                                    <div class="form-text">الضريبة التي تأخذها الشركة من الإدارة</div>
                                </div>
                                
                                <!-- Corporate Tax Amount (Calculated) -->
                                <div class="col-md-6 mb-3">
                                    <label for="corporateTaxAmount" class="form-label">قيمة الضريبة المؤسسية (جنيه)</label>
                                    <input type="text" class="form-control" id="corporateTaxAmount" name="corporateTaxAmount" readonly>
                                    <div class="form-text">تحسب تلقائياً</div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <!-- Profit Percentage -->
                                <div class="col-md-6 mb-3">
                                    <label for="profitPercentage" class="form-label">نسبة الربح (%) <span class="text-danger">*</span></label>
                                    <input type="number" class="form-control" id="profitPercentage" name="profitPercentage" min="0" max="100" step="0.01" required>
                                    <div class="form-text">الربح الإضافي للموزع أو الإدارة</div>
                                </div>
                                
                                <!-- Profit Amount (Calculated) -->
                                <div class="col-md-6 mb-3">
                                    <label for="profitAmount" class="form-label">قيمة الربح (جنيه)</label>
                                    <input type="text" class="form-control" id="profitAmount" name="profitAmount" readonly>
                                    <div class="form-text">تحسب تلقائياً</div>
                                </div>
                            </div>
                            
                            <div class="row">
                                <!-- Discount Amount -->
                                <div class="col-md-6 mb-3">
                                    <label for="discountAmount" class="form-label">الخصم (جنيه)</label>
                                    <input type="number" class="form-control" id="discountAmount" name="discountAmount" min="0" step="0.01" value="0">
                                    <div class="form-text">مبلغ الخصم (اختياري)</div>
                                </div>
                                
                                <!-- Final Amount (Calculated) -->
                                <div class="col-md-6 mb-3">
                                    <label for="finalAmount" class="form-label">المبلغ النهائي (جنيه)</label>
                                    <input type="text" class="form-control" id="finalAmount" name="finalAmount" readonly>
                                    <div class="form-text">المبلغ النهائي بعد جميع الحسابات</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    

                    
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i>
                            إنشاء الفاتورة
                        </button>
                        <a href="/invoices" class="btn btn-outline-secondary">إلغاء</a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">

        

                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Mobile sidebar overlay -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Add Client Modal -->
    <div class="modal fade" id="addClientModal" tabindex="-1" aria-labelledby="addClientModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addClientModalLabel">إضافة عميل جديد</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addClientForm">
                        <div class="mb-3">
                            <label for="clientFullName" class="form-label">اسم العميل <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="clientFullName" required>
                        </div>
                        <div class="mb-3">
                            <label for="clientMobileNumber" class="form-label">رقم الهاتف <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="clientMobileNumber" required>
                        </div>
                        <div class="mb-3">
                            <label for="clientNotes" class="form-label">ملاحظات</label>
                            <textarea class="form-control" id="clientNotes" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="clientCommissionRate" class="form-label">نسبة الضريبة (%)</label>
                            <input type="number" class="form-control" id="clientCommissionRate" min="0" max="100" step="0.01" value="0">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="button" class="btn btn-primary" id="saveClientBtn">
                        <i class="fas fa-save"></i>
                        حفظ العميل
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add File Modal -->
    <div class="modal fade" id="addFileModal" tabindex="-1" aria-labelledby="addFileModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addFileModalLabel">إضافة ملف جديد</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addFileForm">
                        <div class="mb-3">
                            <label for="fileName" class="form-label">اسم الملف <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="fileName" required>
                        </div>
                        <div class="mb-3">
                            <label for="fileUpload" class="form-label">ملف PDF <span class="text-danger">*</span></label>
                            <input type="file" class="form-control" id="fileUpload" accept=".pdf" required>
                            <div class="form-text">يجب أن يكون الملف من نوع PDF وحجمه أقل من 10 ميجابايت</div>
                        </div>
                        <div class="mb-3">
                            <label for="fileCompany" class="form-label">الشركة</label>
                            <select class="form-select" id="fileCompany">
                                <option value="">اختر الشركة (اختياري)</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="fileNotes" class="form-label">ملاحظات</label>
                            <textarea class="form-control" id="fileNotes" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إلغاء</button>
                    <button type="button" class="btn btn-primary" id="saveFileBtn">
                        <i class="fas fa-save"></i>
                        حفظ الملف
                    </button>
            </div>
        </div>
    </div>
</div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Theme toggle functionality
        const themeToggle = document.getElementById('themeToggle');
        const themeIcon = document.getElementById('themeIcon');
        const body = document.body;
        
        // Load saved theme
        const savedTheme = localStorage.getItem('theme') || 'light';
        body.setAttribute('data-theme', savedTheme);
        updateThemeIcon(savedTheme);
        
        // Theme toggle event
        themeToggle.addEventListener('click', function() {
            const currentTheme = body.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            
            body.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
            updateThemeIcon(newTheme);
        });
        
        function updateThemeIcon(theme) {
            if (theme === 'dark') {
                themeIcon.className = 'fas fa-sun';
                themeToggle.title = 'تبديل الوضع المضيء';
            } else {
                themeIcon.className = 'fas fa-moon';
                themeToggle.title = 'تبديل الوضع المظلم';
            }
        }
        
        // Mobile sidebar toggle
        const sidebarToggle = document.getElementById('sidebarToggle');
        const sidebar = document.querySelector('.sidebar');
        const sidebarOverlay = document.getElementById('sidebarOverlay');
        
        if (sidebarToggle) {
            sidebarToggle.addEventListener('click', function() {
                sidebar.classList.toggle('show');
                sidebarOverlay.classList.toggle('show');
            });
        }
        
        if (sidebarOverlay) {
            sidebarOverlay.addEventListener('click', function() {
                sidebar.classList.remove('show');
                sidebarOverlay.classList.remove('show');
            });
        }
        
        // Set today's date as default
        const today = new Date().toISOString().split('T')[0];
        document.getElementById('invoiceDate').value = today;
        
        // Elements
        const clientSearch = document.getElementById('clientSearch');
        const clientDropdown = document.getElementById('clientDropdown');
        const clientHidden = document.getElementById('client');
        const addClientBtn = document.getElementById('addClientBtn');
        
        const fileSearch = document.getElementById('fileSearch');
        const fileDropdown = document.getElementById('fileDropdown');
        const fileHidden = document.getElementById('file');
        const addFileBtn = document.getElementById('addFileBtn');
        
        const distributorSelect = document.getElementById('assignedDistributor');
        const amountInput = document.getElementById('amount');
        const commissionInfo = document.getElementById('commissionInfo');
        const calculateBtn = document.getElementById('calculateBtn');
        
        // Modal elements
        const addClientModal = new bootstrap.Modal(document.getElementById('addClientModal'));
        const addFileModal = new bootstrap.Modal(document.getElementById('addFileModal'));
        
        // Search timeouts
        let clientSearchTimeout;
        let fileSearchTimeout;
        
        // Client search functionality - Immediate search
        clientSearch.addEventListener('input', function() {
            clearTimeout(clientSearchTimeout);
            const query = this.value.trim();
            
            // Show results immediately for any input
            if (query.length === 0) {
                searchClients(''); // Show all clients
            } else {
                clientSearchTimeout = setTimeout(() => {
                    searchClients(query);
                }, 100); // Reduced delay for faster response
            }
        });
        
        clientSearch.addEventListener('focus', function() {
            // Always show results when focusing
            searchClients(this.value.trim());
        });

        // Show all clients when clicking
        clientSearch.addEventListener('click', function() {
            searchClients(this.value.trim());
        });
        
        // File search functionality - Immediate search
        fileSearch.addEventListener('input', function() {
            clearTimeout(fileSearchTimeout);
            const query = this.value.trim();
            
            // Show results immediately for any input
            if (query.length === 0) {
                searchFiles(''); // Show all files
            } else {
                fileSearchTimeout = setTimeout(() => {
                    searchFiles(query);
                }, 100); // Reduced delay for faster response
            }
        });
        
        fileSearch.addEventListener('focus', function() {
            // Always show results when focusing
            searchFiles(this.value.trim());
        });

        // Show all files when clicking
        fileSearch.addEventListener('click', function() {
            searchFiles(this.value.trim());
        });
        
        // Hide dropdowns when clicking outside
        document.addEventListener('click', function(e) {
            if (!clientSearch.contains(e.target) && !clientDropdown.contains(e.target) && !addClientBtn.contains(e.target)) {
                clientDropdown.classList.remove('show');
            }
            if (!fileSearch.contains(e.target) && !fileDropdown.contains(e.target) && (!addFileBtn || !addFileBtn.contains(e.target))) {
                fileDropdown.classList.remove('show');
            }
        });

        // Keyboard navigation for dropdowns
        clientSearch.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                clientDropdown.classList.remove('show');
            }
        });

        fileSearch.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                fileDropdown.classList.remove('show');
            }
        });
        
        // Search clients function
        async function searchClients(query) {
            try {
                console.log('Searching clients with query:', query);
                
                // Show loading state
                clientDropdown.innerHTML = '<div class="dropdown-loading"><div class="spinner-border spinner-border-sm" role="status"></div> جاري البحث...</div>';
                clientDropdown.classList.add('show');
                
                const url = query ? `/clients/api/search?q=${encodeURIComponent(query)}` : '/clients/api/search';
                console.log('Fetching from URL:', url);
                
                const response = await fetch(url);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const clients = await response.json();
                
                console.log('Client search response:', clients);
                
                if (clients.error) {
                    console.error('Client search error:', clients.error);
                    clientDropdown.innerHTML = '<div class="dropdown-item text-danger">حدث خطأ أثناء البحث: ' + clients.error + '</div>';
                    return;
                }
                
                displayClientResults(clients);
            } catch (error) {
                console.error('Client search error:', error);
                clientDropdown.innerHTML = '<div class="dropdown-item text-danger">حدث خطأ أثناء البحث: ' + error.message + '</div>';
            }
        }
        
        // Search files function
        async function searchFiles(query) {
            try {
                console.log('Searching files with query:', query);
                
                // Show loading state
                fileDropdown.innerHTML = '<div class="dropdown-loading"><div class="spinner-border spinner-border-sm" role="status"></div> جاري البحث...</div>';
                fileDropdown.classList.add('show');
                
                const url = query ? `/files/api/search?q=${encodeURIComponent(query)}` : '/files/api/search';
                console.log('Fetching from URL:', url);
                
                const response = await fetch(url);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const files = await response.json();
                
                console.log('File search response:', files);
                
                if (files.error) {
                    console.error('File search error:', files.error);
                    fileDropdown.innerHTML = '<div class="dropdown-item text-danger">حدث خطأ أثناء البحث: ' + files.error + '</div>';
                    return;
                }
                
                displayFileResults(files);
            } catch (error) {
                console.error('File search error:', error);
                fileDropdown.innerHTML = '<div class="dropdown-item text-danger">حدث خطأ أثناء البحث: ' + error.message + '</div>';
            }
        }
        
        // Display client search results
        function displayClientResults(clients) {
            if (clients.length === 0) {
                clientDropdown.innerHTML = '<div class="dropdown-item text-muted">لا توجد نتائج</div>';
            } else {
                clientDropdown.innerHTML = clients.map(client => 
                    '<div class="dropdown-item" data-id="' + client._id + '" data-name="' + client.fullName + '" data-phone="' + client.mobileNumber + '">' +
                        '<div><strong>' + client.fullName + '</strong></div>' +
                        '<div class="text-muted small">' + client.mobileNumber + '</div>' +
                    '</div>'
                ).join('');
            }
            
            clientDropdown.classList.add('show');
            
            // Add click handlers
            clientDropdown.querySelectorAll('.dropdown-item').forEach(item => {
                item.addEventListener('click', function() {
                    const id = this.dataset.id;
                    const name = this.dataset.name;
                    const phone = this.dataset.phone;
                    
                    clientHidden.value = id;
                    clientSearch.value = name + ' (' + phone + ')';
                    clientDropdown.classList.remove('show');
                    
                    checkFormCompletion();
                });
            });
            
            // Add keyboard navigation
            clientDropdown.querySelectorAll('.dropdown-item').forEach((item, index) => {
                item.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        this.click();
                    }
                });
                item.setAttribute('tabindex', '0');
            });
        }
        
        // Display file search results
        function displayFileResults(files) {
            console.log('Displaying files:', files);
            
            if (files.length === 0) {
                fileDropdown.innerHTML = '<div class="dropdown-item text-muted">لا توجد نتائج</div>';
            } else {
                fileDropdown.innerHTML = files.map(file => {
                    const companyName = file.company && file.company.name ? file.company.name : 'غير محدد';
                    const statusText = file.status ? ` (${file.status})` : '';
                    
                    return '<div class="dropdown-item" data-id="' + file._id + '" data-name="' + file.fileName + '" data-company="' + companyName + '">' +
                        '<div><strong>' + file.fileName + statusText + '</strong></div>' +
                        '<div class="text-muted small">' + companyName + '</div>' +
                    '</div>';
                }).join('');
            }
            
            fileDropdown.classList.add('show');
            
            // Add click handlers
            fileDropdown.querySelectorAll('.dropdown-item').forEach(item => {
                item.addEventListener('click', function() {
                    const id = this.dataset.id;
                    const name = this.dataset.name;
                    const company = this.dataset.company;
                    
                    fileHidden.value = id;
                    fileSearch.value = name + ' - ' + company;
                    fileDropdown.classList.remove('show');
                    
                    checkFormCompletion();
                });
            });
            
            // Add keyboard navigation
            fileDropdown.querySelectorAll('.dropdown-item').forEach((item, index) => {
                item.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        this.click();
                    }
                });
                item.setAttribute('tabindex', '0');
            });
        }
        
        // Add client button
        addClientBtn.addEventListener('click', function() {
            addClientModal.show();
        });
        
        // Add file button
        if (addFileBtn) {
            addFileBtn.addEventListener('click', function() {
                loadCompanies();
                addFileModal.show();
            });
        }
        
        // Load companies for file modal
        async function loadCompanies() {
            try {
                const response = await fetch('/companies/api/list');
                const companies = await response.json();
                
                const companySelect = document.getElementById('fileCompany');
                companySelect.innerHTML = '<option value="">اختر الشركة (اختياري)</option>';
                
                companies.forEach(company => {
                    companySelect.innerHTML += '<option value="' + company._id + '">' + company.name + '</option>';
                });
            } catch (error) {
                console.error('Error loading companies:', error);
            }
        }
        
        // Save client
        document.getElementById('saveClientBtn').addEventListener('click', async function() {
            const form = document.getElementById('addClientForm');
            const formData = new FormData(form);
            
            const clientData = {
                fullName: formData.get('clientFullName') || document.getElementById('clientFullName').value,
                mobileNumber: formData.get('clientMobileNumber') || document.getElementById('clientMobileNumber').value,
                notes: formData.get('clientNotes') || document.getElementById('clientNotes').value,
                commissionRate: formData.get('clientCommissionRate') || document.getElementById('clientCommissionRate').value
            };
            
            try {
                const response = await fetch('/clients/api/create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(clientData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Auto-select the new client
                    clientHidden.value = result.client._id;
                    clientSearch.value = result.client.fullName + ' (' + result.client.mobileNumber + ')';
                    
                    addClientModal.hide();
                    form.reset();
                    
                    // Show success message
                    showAlert('تم إضافة العميل بنجاح', 'success');
                    
                    checkFormCompletion();
                } else {
                    showAlert(result.error, 'danger');
                }
            } catch (error) {
                console.error('Error creating client:', error);
                showAlert('حدث خطأ أثناء إضافة العميل', 'danger');
            }
        });
        
        // Save file
        document.getElementById('saveFileBtn').addEventListener('click', async function() {
            const form = document.getElementById('addFileForm');
            const formData = new FormData();
            
            formData.append('fileName', document.getElementById('fileName').value);
            formData.append('company', document.getElementById('fileCompany').value);
            formData.append('notes', document.getElementById('fileNotes').value);
            formData.append('file', document.getElementById('fileUpload').files[0]);
            
            try {
                const response = await fetch('/files/api/create', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Auto-select the new file
                    fileHidden.value = result.file._id;
                    fileSearch.value = result.file.fileName + ' - ' + (result.file.company ? result.file.company.name : 'غير محدد');
                    
                    addFileModal.hide();
                    form.reset();
                    
                    // Show success message
                    showAlert('تم إضافة الملف بنجاح', 'success');
                    
                    checkFormCompletion();
                } else {
                    showAlert(result.error, 'danger');
                }
            } catch (error) {
                console.error('Error creating file:', error);
                showAlert('حدث خطأ أثناء إضافة الملف', 'danger');
            }
        });
        
        // Show alert function
        function showAlert(message, type) {
            const iconMap = {
                'success': 'success',
                'danger': 'error',
                'warning': 'warning',
                'info': 'info'
            };
            
            Swal.fire({
                title: type === 'success' ? 'نجح' : type === 'danger' ? 'خطأ' : type === 'warning' ? 'تحذير' : 'معلومات',
                text: message,
                icon: iconMap[type] || 'info',
                confirmButtonText: 'حسناً',
                customClass: {
                    confirmButton: type === 'success' ? 'btn btn-success' : 
                                  type === 'danger' ? 'btn btn-danger' : 
                                  type === 'warning' ? 'btn btn-warning' : 'btn btn-info'
                }
            });
        }
    
    // Calculate tax and profit amounts
    function calculateTaxAndProfit() {
        const total = parseFloat(document.getElementById('total').value) || 0;
        const taxPercentage = parseFloat(document.getElementById('taxPercentage').value) || 0;
        const managementTaxPercentage = parseFloat(document.getElementById('managementTaxPercentage').value) || 0;
        const corporateTaxPercentage = parseFloat(document.getElementById('corporateTaxPercentage').value) || 0;
        const profitPercentage = parseFloat(document.getElementById('profitPercentage').value) || 0;
        const discount = parseFloat(document.getElementById('discountAmount').value) || 0;
        
        // Calculate tax amounts
        const taxAmount = (total * taxPercentage / 100);
        const managementTaxAmount = (total * managementTaxPercentage / 100);
        const corporateTaxAmount = (total * corporateTaxPercentage / 100);
        const profitAmount = (total * profitPercentage / 100);
        
        // Calculate final amount
        const finalAmount = total + taxAmount + managementTaxAmount + corporateTaxAmount + profitAmount - discount;
        
        // Update calculated fields
        document.getElementById('taxAmount').value = taxAmount.toFixed(2);
        document.getElementById('managementTaxAmount').value = managementTaxAmount.toFixed(2);
        document.getElementById('corporateTaxAmount').value = corporateTaxAmount.toFixed(2);
        document.getElementById('profitAmount').value = profitAmount.toFixed(2);
        document.getElementById('finalAmount').value = finalAmount.toFixed(2);
    }
    

    
    function checkFormCompletion() {
        const isComplete = clientHidden.value && distributorSelect.value && fileHidden.value && 
                          document.getElementById('total').value && parseFloat(document.getElementById('total').value) > 0;
    }
    

    
    // Add event listeners for new fields
    const totalInput = document.getElementById('total');
    const taxPercentageInput = document.getElementById('taxPercentage');
    const managementTaxPercentageInput = document.getElementById('managementTaxPercentage');
    const corporateTaxPercentageInput = document.getElementById('corporateTaxPercentage');
    const profitPercentageInput = document.getElementById('profitPercentage');
    const discountAmountInput = document.getElementById('discountAmount');
    // Calculate tax and profit when any input changes
    totalInput.addEventListener('input', calculateTaxAndProfit);
    taxPercentageInput.addEventListener('input', calculateTaxAndProfit);
    managementTaxPercentageInput.addEventListener('input', calculateTaxAndProfit);
    corporateTaxPercentageInput.addEventListener('input', calculateTaxAndProfit);
    profitPercentageInput.addEventListener('input', calculateTaxAndProfit);
    discountAmountInput.addEventListener('input', calculateTaxAndProfit);
    
    distributorSelect.addEventListener('change', checkFormCompletion);
    amountInput.addEventListener('input', checkFormCompletion);
});
</script>
</body>
</html>